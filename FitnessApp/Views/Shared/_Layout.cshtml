<!DOCTYPE html>
<html lang="ru" data-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Онлайн журнал тренировок</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        :root {
            /* Основные акцентные цвета */
            --primary: #ff6f61; /* Тёплый коралловый для акцентов в тёмной теме */
            --primary-dark: #e63946; /* Более тёмный коралловый для градиентов */
            --primary-light: #ffb4a2; /* Светлый коралловый для светлой темы */
            --primary-light-dark: #f08080; /* Средний коралловый для hover в светлой теме */
            /* Текстовые цвета */
            --text-light: #e0e0e0; /* Мягкий светло-серый для тёмной темы */
            --text-dark: #4a2c2a; /* Тёмно-коричневый для светлой темы */
            /* Фоны */
            --bg-light: #fff8f0; /* Очень светлый кремовый для светлой темы */
            --bg-dark: #2a1b3d; /* Глубокий тёмно-фиолетовый для тёмной темы */
            --bg-dark-gradient-start: #2a1b3d; /* Начало градиента тёмной темы */
            --bg-dark-gradient-end: #3d2a5d; /* Конец градиента тёмной темы */
            /* Карточки */
            --card-light: #ffffff; /* Белый для карточек в светлой теме */
            --card-dark: #3f2e56; /* Тёмно-фиолетовый для карточек в тёмной теме */
            /* Таблицы */
            --table-header-dark: #4a3c6b; /* Средний фиолетовый для заголовков таблицы в тёмной теме */
            --table-header-light: #f4e1d2; /* Светло-персиковый для заголовков таблицы в светлой теме */
            --table-row-dark: #35244c; /* Тёмный фиолетовый для строк в тёмной теме */
            --table-row-light: #fef5e7; /* Очень светлый персиковый для строк в светлой теме */
            --table-hover-dark: #5a4678; /* Hover для таблицы в тёмной теме */
            --table-hover-light: #fce8d5; /* Hover для таблицы в светлой теме */
            /* Navbar и Footer */
            --navbar-dark: #35244c; /* Тёмно-фиолетовый для navbar и footer в тёмной теме */
            --footer-text-dark: #b19cd9; /* Светло-фиолетовый текст футера в тёмной теме */
            --footer-text-light: #8b5e5a; /* Тёмно-розовый текст футера в светлой теме */
            /* Тени */
            --shadow-dark: rgba(0, 0, 0, 0.4); /* Более глубокая тень для тёмной темы */
            --shadow-light: rgba(74, 44, 42, 0.15); /* Тёплая тень для светлой темы */
            --btn-hover-shadow: rgba(255, 111, 97, 0.5); /* Тень кнопки при hover, в тон --primary */
            /* Формы */
            --form-bg-dark: #4a3c6b; /* Средний фиолетовый для фона форм в тёмной теме */
            --form-border-dark: #6b5b95; /* Светлее фиолетовый для границ в тёмной теме */
            --form-bg-light: #ffffff; /* Белый фон форм в светлой теме */
            --form-border-light: #d9b8b5; /* Мягкий розовый для границ в светлой теме */
            /* Кнопки outline */
            --btn-outline-hover-bg-dark: rgba(255, 255, 255, 0.15); /* Полупрозрачный фон при hover в тёмной теме */
            --btn-outline-hover-bg-light: rgba(74, 44, 42, 0.1); /* Полупрозрачный коричневый фон при hover в светлой теме */
            /* Иконка toggler */
            --navbar-toggler-dark: rgba(224, 224, 224, 1); /* Светло-серый для тёмной темы */
            --navbar-toggler-light: rgba(74, 44, 42, 1); /* Тёмно-коричневый для светлой темы */
        }

        body {
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            transition: all 0.3s;
        }

            body[data-theme="dark"] {
                background: linear-gradient(135deg, var(--bg-dark-gradient-start) 0%, var(--bg-dark-gradient-end) 100%);
                color: var(--text-light);
            }

            body[data-theme="light"] {
                background: var(--bg-light);
                color: var(--text-dark);
            }

        header {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            transition: padding 0.3s ease, height 0.3s ease;
            height: 70px;
        }

            header.shrink {
                height: 40px;
                padding: 0px 0;
            }

        .navbar {
            transition: all 0.3s ease;
            height: 100%;
        }

            .navbar[data-theme="dark"] {
                background: var(--navbar-dark);
                box-shadow: 0 4px 10px var(--shadow-dark);
            }

            .navbar[data-theme="light"] {
                background: var(--card-light);
                box-shadow: 0 4px 10px var(--shadow-light);
            }

        .navbar-brand, .nav-link {
            transition: color 0.3s;
        }

        body[data-theme="dark"] .navbar-brand,
        body[data-theme="dark"] .nav-link {
            color: var(--text-light) !important;
        }

        body[data-theme="light"] .navbar-brand,
        body[data-theme="light"] .nav-link {
            color: var(--text-dark) !important;
        }

        .nav-link:hover {
            color: var(--primary) !important;
        }

        body[data-theme="light"] .nav-link:hover {
            color: var(--primary-light-dark) !important;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='var(--navbar-toggler-dark)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        body[data-theme="light"] .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='var(--navbar-toggler-light)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        .container {
            flex: 1;
            padding-top: 80px;
        }

        main {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(100vh - 120px); /* Учитываем высоту header и footer */
        }

        .auth-container {
            max-width: 400px;
            width: 100%;
            padding: 20px;
        }

        footer[data-theme="dark"] {
            background: var(--navbar-dark);
            color: var(--footer-text-dark);
            box-shadow: 0 -4px 10px var(--shadow-dark);
        }

        footer[data-theme="light"] {
            background: var(--card-light);
            color: var(--footer-text-light);
            box-shadow: 0 -4px 10px var(--shadow-light);
        }

        footer {
            text-align: center;
            padding: 15px 0;
            width: 100%;
            position: relative;
        }

        .btn-primary[data-theme="dark"] {
            background: linear-gradient(45deg, var(--primary), var(--primary-dark));
            border: none;
            color: var(--card-light);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .btn-primary[data-theme="light"] {
            background: linear-gradient(45deg, var(--primary-light), var(--primary-light-dark));
            border: none;
            color: var(--card-light);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px var(--btn-hover-shadow);
        }

        .btn-outline-custom[data-theme="dark"] {
            color: var(--text-light);
            border-color: var(--text-light);
            transition: all 0.3s;
        }

            .btn-outline-custom[data-theme="dark"]:hover {
                color: var(--primary);
                border-color: var(--primary);
                background: var(--btn-outline-hover-bg-dark);
            }

        .btn-outline-custom[data-theme="light"] {
            color: var(--text-dark);
            border-color: var(--text-dark);
            transition: all 0.3s;
        }

            .btn-outline-custom[data-theme="light"]:hover {
                color: var(--primary-light-dark);
                border-color: var(--primary-light-dark);
                background: var(--btn-outline-hover-bg-light);
            }

        .card[data-theme="dark"] {
            background: var(--card-dark);
            color: var(--text-light);
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 15px var(--shadow-dark);
        }

        .card[data-theme="light"] {
            background: var(--card-light);
            color: var(--text-dark);
            border: 1px solid var(--form-border-light);
            border-radius: 12px;
            box-shadow: 0 4px 15px var(--shadow-light);
        }

        .table-custom {
            border-collapse: separate;
            border-spacing: 0;
            box-shadow: 0 4px 15px var(--shadow-light);
        }

            .table-custom th,
            .table-custom td {
                padding: 12px 16px;
                vertical-align: middle;
            }

        .table-header[data-theme="dark"] {
            background: var(--table-header-dark);
            color: var(--text-light);
            font-weight: 600;
        }

        .table-header[data-theme="light"] {
            background: var(--table-header-light);
            color: var(--text-dark);
            font-weight: 600;
        }

        .table-custom tbody tr[data-theme="dark"] {
            background: var(--card-dark);
            transition: background 0.2s ease;
        }

        .table-custom tbody tr[data-theme="light"] {
            background: var(--card-light);
            transition: background 0.2s ease;
        }

        .table-custom tbody tr.table-striped:nth-child(odd)[data-theme="dark"] {
            background: var(--table-row-dark);
        }

        .table-custom tbody tr.table-striped:nth-child(odd)[data-theme="light"] {
            background: var(--table-row-light);
        }

        .table-custom tbody tr:hover[data-theme="dark"] {
            background: var(--table-hover-dark);
        }

        .table-custom tbody tr:hover[data-theme="light"] {
            background: var(--table-hover-light);
        }

        .form-control[data-theme="dark"] {
            background: var(--form-bg-dark);
            color: var(--text-light);
            border-color: var(--form-border-dark);
        }

        .form-control[data-theme="light"] {
            background: var(--form-bg-light);
            color: var(--text-dark);
            border-color: var(--form-border-light);
        }

        .form-select[data-theme="dark"] {
            background: var(--form-bg-dark);
            color: var(--text-light);
            border-color: var(--form-border-dark);
        }

        .form-select[data-theme="light"] {
            background: var(--form-bg-light);
            color: var(--text-dark);
            border-color: var(--form-border-light);
        }

        .progress[data-theme="dark"] .progress-bar {
            background-color: var(--primary);
        }

        .progress[data-theme="light"] .progress-bar {
            background-color: var(--primary-light-dark);
        }

        .list-group[data-theme="dark"] {
            background: var(--card-dark);
            color: var(--text-light);
        }

        .list-group[data-theme="light"] {
            background: var(--card-light);
            color: var(--text-dark);
        }

        .list-group-item[data-theme="dark"] {
            background: var(--card-dark);
            color: var(--text-light);
            border-color: var(--form-bg-dark);
        }

        .list-group-item[data-theme="light"] {
            background: var(--card-light);
            color: var(--text-dark);
            border-color: var(--form-border-light);
        }

        .text-light[data-theme="light"] {
            color: var(--text-dark) !important;
        }

        h2, h5, h6 {
            color: var(--text-light);
        }

        body[data-theme="light"] h2,
        body[data-theme="light"] h5,
        body[data-theme="light"] h6 {
            color: var(--text-dark);
        }

        .header-toggle {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            background: inherit;
            border: none;
            color: var(--text-light);
            padding: 5px 10px;
            cursor: pointer;
            z-index: 1001;
            display: none;
            transition: color 0.3s;
        }

        body[data-theme="light"] .header-toggle {
            color: var(--text-dark);
        }

        header.shrink .header-toggle {
            display: block;
        }
    </style>
</head>
<body data-theme="dark">
    <header>
        <nav class="navbar navbar-expand-lg" data-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="/"><i class="fas fa-dumbbell me-2"></i>Онлайн журнал</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto align-items-center">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Profile/Index">
                                    <i class="fas fa-user me-2"></i>
                                    @(string.IsNullOrEmpty(User.FindFirst("Name")?.Value) ? User.Identity.Name : User.FindFirst("Name")?.Value)
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Workouts/Index"><i class="fas fa-running me-2"></i>Тренировки</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Workouts/Stats"><i class="fas fa-chart-bar me-2"></i>Статистика</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Goals/Index"><i class="fas fa-bullseye me-2"></i>Цели</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Auth/Logout"><i class="fas fa-sign-out-alt me-2"></i>Выйти</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Auth/Login"><i class="fas fa-sign-in-alt me-2"></i>Вход</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Auth/Register"><i class="fas fa-user-plus me-2"></i>Регистрация</a>
                            </li>
                        }
                        <li class="nav-item">
                            <button id="themeToggle" class="btn btn-link nav-link"><i class="fas fa-adjust"></i></button>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <button class="header-toggle" id="headerToggle"><i class="fas fa-chevron-down"></i></button>
    </header>

    <main>
        @RenderBody()
    </main>

    <footer data-theme="dark">
        <p>© @DateTime.Now.Year - Онлайн журнал тренировок</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
    <script>
        const themeToggle = document.getElementById('themeToggle');
        const header = document.querySelector('header');
        const headerToggle = document.getElementById('headerToggle');
        const body = document.body;
        const navbar = document.querySelector('.navbar');
        const footer = document.querySelector('footer');
        const elements = document.querySelectorAll('[data-theme]');

        function updateTheme(newTheme) {
            body.setAttribute('data-theme', newTheme);
            navbar.setAttribute('data-theme', newTheme);
            footer.setAttribute('data-theme', newTheme);
            elements.forEach(el => el.setAttribute('data-theme', newTheme));
            localStorage.setItem('theme', newTheme);
        }

        themeToggle.addEventListener('click', () => {
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            updateTheme(newTheme);
        });

        const savedTheme = localStorage.getItem('theme') || 'dark';
        updateTheme(savedTheme);

        let isExpanded = false;
        let lastScrollY = window.scrollY;

        function updateHeader() {
            const scrollY = window.scrollY;
            if (scrollY > 50 && !isExpanded) {
                header.classList.add('shrink');
            } else if (!isExpanded) {
                header.classList.remove('shrink');
            }
            lastScrollY = scrollY;
        }

        window.addEventListener('scroll', () => {
            requestAnimationFrame(updateHeader);
        });

        headerToggle.addEventListener('click', () => {
            isExpanded = !isExpanded;
            if (isExpanded) {
                header.classList.remove('shrink');
                headerToggle.querySelector('i').classList.replace('fa-chevron-down', 'fa-chevron-up');
            } else if (window.scrollY > 50) {
                header.classList.add('shrink');
                headerToggle.querySelector('i').classList.replace('fa-chevron-up', 'fa-chevron-down');
            }
        });

        header.addEventListener('mouseenter', () => {
            if (window.scrollY > 50 && !isExpanded) {
                header.classList.remove('shrink');
                isExpanded = true;
                headerToggle.querySelector('i').classList.replace('fa-chevron-down', 'fa-chevron-up');
            }
        });

        header.addEventListener('mouseleave', () => {
            if (window.scrollY > 50 && isExpanded) {
                header.classList.add('shrink');
                isExpanded = false;
                headerToggle.querySelector('i').classList.replace('fa-chevron-up', 'fa-chevron-down');
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>